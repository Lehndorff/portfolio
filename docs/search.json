[
  {
    "objectID": "what_is_hcl.html",
    "href": "what_is_hcl.html",
    "title": "What is HCL?",
    "section": "",
    "text": "HCL is a colorspace which is better than RGB for creating perceptually uniform colors.\n\nHue: wavelength (color)\nChroma: purity, dullness\nLuminance: from black to white\n\nThe polarLUV function from the colorspace package, takes hue, chroma and luminance inputs and returns a color hexcode (via the hex function). Based on testing, polarLUV:\n\ntakes hue as a value between -134 and 107\nluminance of 0 = black\nnegative chroma exist, but I find their interpretation less intuitive\nthere are many impossible combinations of HCL.\n\nThis process goes through a range of hues and generates a sample combinations of chroma and luminance.\n\nlibrary(tidyverse)\nlibrary(colorspace)\n\n# -134:107\n\noutput<-NULL\nfor(h in seq(-134,107,16)){\n  # print(h)\n  z=expand.grid(\n  l=seq(1,150,.1),#\n  c=seq(-200,200,.1) #\n  ) %>% \n    mutate(\n      h=h,\n      color=hex(polarLUV(H=h,C=c,L=l))\n      ) %>% \n    filter(!is.na(color)) %>% #\n    slice_sample(n=10000,replace = T) %>% \n    distinct()\n  \n  output<-bind_rows(output,z)\n  \n}\n\nA plot showing the impact on color of chroma and luminance on a selection of hues.\n\n\nShow code\nggplot(output)+\n  geom_point(aes(x=l,y=c),color=output$color)+\n  geom_hline(yintercept = 0, linetype=2)+\n  theme_minimal()+\n  labs(x=\"Luminance\",y=\"Chroma\",title=\"Impact of Luminance and Chroma variation for a sample of Hues\")+\n  facet_wrap(h~.)"
  },
  {
    "objectID": "colorful_circles.html",
    "href": "colorful_circles.html",
    "title": "Colorful Bubbles",
    "section": "",
    "text": "This is a random simulation of colorful bubbles. Each frame represents a “year” and the simulation last 1,000 years.\n\n\nEach bubble grows by 1 unit each year and increase by 1 in terms of “age” . At initialization each bubble have ages/sizes between 1 and 5.\n\n\n\nHowever there is a chance that each bubble will “pop”. The odds that a bubble pops is equivalent to age in age + lifespan. In this simulation the lifespan is 50 years. That is, at an age of 50 the colorful bubbles have a 50% of popping. Bubbles of age 1 will not pop.\n\n\n\nAt initialization, each colorful bubble is assigned a random color from the RGB colorspace. These colors scale between 0 and 1 in terms of red, green and blue.\n\n\n\nIn this simulation there is a 12% chance in each year that a colorful bubble and it nearest neighbor will produce a baby bubble. The baby bubble will:\n\nhave a size of 1\nhave an age of 1\nthe average position of the parents plus some error\n\n\n\nBaby bubbles will have the average color (in terms of RGB) of the two parent bubbles. However, there is a chance, that this color will change. Specifically, for each color (R, G, and B) there is a chance equivalent to the strength of each color that that color will become up to 20% stronger, while the other colors will become 20% weaker. That is, strong greens are likely to become stronger green (and less red, and less blue)."
  },
  {
    "objectID": "conditional_probability.html",
    "href": "conditional_probability.html",
    "title": "Conditional Probability",
    "section": "",
    "text": "There are three cards. One with two red sides, one with two black sides, one with a black side and a red site.\nA random card is placed in front of you – it has a red face. What are the odds that the other side of the card is black?\nIntuitively, I would expect the answer to be 50% – there are only two possible options red or black. Given that we are not looking at the black/black card the odds that the other side is black (this is the red/black card) and the odds that the other side is red (this is the red/red card) should be equally likely.\nThis is a simulation of this situation as a means of testing Bayes Theorem for conditional probabilities.\nFirst, there are six possibilities for how the cards could be oriented – each of the three card with one of two sides showing.\n\ncards<-data.frame(\n  card=1:6,\n  face=c(\"R\",\"R\",\"R\",\"B\",\"B\",\"B\"),\n  back=c(\"R\",\"R\",\"B\",\"R\",\"B\",\"B\"),\n  card_num=c(1,1,2,2,3,3),\n  orientation=rep(c(\"A\",\"B\"),3)\n  )\n\ncards\n\n  card face back card_num orientation\n1    1    R    R        1           A\n2    2    R    R        1           B\n3    3    R    B        2           A\n4    4    B    R        2           B\n5    5    B    B        3           A\n6    6    B    B        3           B\n\n\nThese cards can then be randomly sampled 1,000,000 times.\n\nsampled<-data.frame(card=sample(1:6,1000000,replace=T)) %>% \n  left_join(cards)\n\nTo calculate the probability that the other side of the card is black given that we are looking at a red side, we first need to filter our random samples down to the cases where a red card is face up. Then count up the frequency with which black and red each appear as the back side of the card.\n\nsampled %>% \n  filter(face==\"R\") %>% \n  group_by(back) %>% \n  summarise(n=n()) %>% \n  mutate(pct=scales::percent(n/sum(n)))\n\n# A tibble: 2 × 3\n  back       n pct  \n  <chr>  <int> <chr>\n1 B     166726 33%  \n2 R     333050 67%  \n\n\nRather than being the expected 50% probability, the odds of having the other side be black is only 1/3."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome!",
    "section": "",
    "text": "More to come!\n\nCheck out my other pages:\n\nA simulation of swifts\nSomething that helped me better understand HCL\nAnalysis of the FIFA Women’s World Cup inspired by Tidy Tuesday\nAbout me"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About me",
    "section": "",
    "text": "I am currently a consultant at Evergreen Economics.\nEvergreen Economics Resume\nI started at Evergreen in 2016 after graduating from Willamette University."
  },
  {
    "objectID": "tidy_wwc.html",
    "href": "tidy_wwc.html",
    "title": "Tidy Tuesday and the FIFA Women’s World Cup",
    "section": "",
    "text": "Inspired by the work of @tanya_shapiro and the work of DomDF for Tidy Tuesday on July 7, 2019, I have analyzed the results from the FIFA Women’s World Cup.\nIn particular this analysis focuses on how the United States compares to three other nations that have made the World Cup Final at least twice – Germany, Japan and Norway.\n\n\nShow code\nagg_dat<-wwc_outcomes %>% \n  group_by(team,round) %>% \n  summarise(n=n(),mean=mean(score)) %>% \n  filter(round!=\"Third Place Playoff\") %>% \n  filter(\"Final\"%in%round) %>% \n  group_by(team) %>% \n  filter(n[round==\"Final\"]>1)\n\nagg_dat$round<-factor(agg_dat$round,levels = c(\"Group\",\"Round of 16\",\"Quarter Final\",\"Semi Final\",\"Final\"))\n\nh2h<-wwc_outcomes %>% \n  filter(team%in%agg_dat$team) %>% \n  group_by(year,yearly_game_id) %>% \n  filter(n()==2)\n\noutput<-NULL\nfor(i in unique(h2h$team)){\n  this_summary<-h2h %>% \n    group_by(year,yearly_game_id) %>% \n    filter(i%in%team) %>%\n    group_by(this_team=i,team) %>% \n    summarise(\n      w=sum(win_status==\"Won\"),\n      l=sum(win_status==\"Lost\"),\n      d=sum(win_status==\"Tie\")) %>% \n    mutate(\n      pct=l/(w+l)\n    )\n  output<-bind_rows(\n    this_summary,\n    output\n  )\n  \n}\n\nfinal_summary<-wwc_outcomes %>% \n  filter(round==\"Final\") %>% \n  group_by(team) %>% \n  summarise(apps=n(),first=min(year),goals=sum(score)) %>% \n  arrange(-goals)\n\nusa_summary<-wwc_outcomes %>% \n  group_by(year,yearly_game_id) %>% \n  filter(\"USA\"%in%team) %>% \n  group_by(team) %>% \n  summarise(\n    w=sum(win_status==\"Won\"),\n    l=sum(win_status==\"Lost\"),\n    d=sum(win_status==\"Tie\")\n  )\n\n\nWhile each of these teams have storied histories at the World Cup, its the United States that scores the most goals on average in the game that matters the most – the Final. In fact, the 11 goals scored by the United States in World Cup Finals is nearly as many as all other nations combined (12).\n\n\nShow code\nagg_dat %>% \n  left_join(codes) %>% \nggplot(aes(x=round,y=mean,color=country))+\n  geom_point(size=2.5)+\n  geom_line(aes(group=team),size=1.5)+\n  theme_minimal()+\n  geom_hline(yintercept = 0,color=NA)+\n  theme(legend.position = 'bottom')+\n  scale_color_manual(values=rev(c(\"black\",\"#00205B\",\"#BC002D\",\"#FFCC00\")))+\n  labs(x=\"Round of Tournament\",y=\"Average Goals per Round\",color=\"Country\",\n       title=\"Winning Time\",subtitle = \"The United States scores the most goals in World Cup Finals\")\n\n\n\n\n\nFurther, when competing against these other historic powers in women’s international soccer, the United States has dominated, winning 75% of it matches against Germany, Japan, and Norway. While dominant, 75% is actually the lowest winning percentage that the United States has against an individual opponent and only five teams (Germany, Japan, Norway, Brazil, and Sweden) have ever beaten the United States in a World Cup match, and none have done so twice.\n\n\nShow code\noutput %>% \n  left_join(codes) %>% \n  filter(this_team!=team) %>% \n  ggplot()+\n  geom_col(aes(x=country,y=pct,fill=country))+\n  theme_minimal()+\n  theme(\n    legend.position = 'bottom',\n    strip.background = element_rect(fill=\"gray80\"),\n    strip.placement = 'left',\n    strip.text.y.left = element_text(angle = 0))+\n  scale_y_continuous(labels = scales::percent,expand = c(0,0,.05,0))+\n  scale_fill_manual(values=rev(c(\"black\",\"#00205B\",\"#BC002D\",\"#FFCC00\")))+\n  coord_flip()+\n  facet_grid(paste(this_team,\"V.\")~.,scale=\"free_y\",switch = \"y\")+\n  guides(fill='none')+\n  labs(x=NULL,y=\"Winning Percentage (excluding draws)\",\n       title=\"Better v. Best\",subtitle = \"The United States wins 75% of its matches against other top teams\")\n\n\n\n\n\nThe results of ever FIFA Women’s World Cup played by the United States. The United States has been held scoreless just five times.\n\n\nShow code\ntable_data<-wwc_outcomes %>% \n  filter(team==\"USA\") %>% \n  left_join(\n    wwc_outcomes %>% \n      filter(team!=\"USA\") %>% \n      select(-round,-win_status) %>% \n        left_join(codes),\n    by=c(\"year\",\"yearly_game_id\"),\n    suffix=c(\"_usa\",\"_opp\")) %>% \n  select(Year=year,Round=round,Opponent=country,`USA Score`=score_usa,`Opponnent Score`=score_opp,Result=win_status) \n\ntable_data<-table_data %>% \n  datatable(filter = \"top\", extensions = c(\"Scroller\",\n    \"Buttons\"), options = list(deferRender = TRUE, scrollY = 400, scroller = TRUE,\n    dom = \"Bfrtip\", buttons = c(\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"))) %>% \n  formatStyle(\n    colnames(table_data),\n    backgroundColor = \"white\"\n    )\n\ntable_data"
  },
  {
    "objectID": "colorcir_analysis.html",
    "href": "colorcir_analysis.html",
    "title": "Analysis of Colorful Bubbles",
    "section": "",
    "text": "A different post generated a 1,000 year simulation of the lives of colorful Bubbles given some set parameter. Here was the result:"
  },
  {
    "objectID": "colorcir_analysis.html#summary-statistics",
    "href": "colorcir_analysis.html#summary-statistics",
    "title": "Analysis of Colorful Bubbles",
    "section": "Summary Statistics",
    "text": "Summary Statistics\n\nObserved Lifespan\n\n\nShow code\nmax_age<-tree_dat %>% \n  filter(!is.na(die)) %>% \n  group_by(tree) %>% \n  filter(age==max(age)) \nmedian_age<-round(median(max_age$age))\n\nintervals<-max_age %>%\n  ungroup() %>% \n  select(left=age,right=age)\n\nfit=fitdistrplus::fitdistcens(data.frame(intervals),\"weibull\")\nsummary(fit)\n\n\nFitting of the distribution ' weibull ' By maximum likelihood on censored data \nParameters\n       estimate  Std. Error\nshape  2.030325 0.009855432\nscale 10.571123 0.034829574\nLoglikelihood:  -73087.52   AIC:  146179   BIC:  146195.3 \nCorrelation matrix:\n          shape     scale\nshape 1.0000000 0.3213546\nscale 0.3213546 1.0000000\n\n\nShow code\nplot(fit)\n\n\n\n\n\nShow code\nmax_age %>% \n  ggplot()+\n  geom_density(aes(x=age),binwidth = 1,fill=\"gray60\")+\n  # geom_text(data=NULL,x=median_age,y=Inf,label=paste(\"Median Age:\\n\",median_age))+\n  theme_minimal()+\n  stat_function(fun = dweibull, args = list(shape = fit$estimate[1], scale = fit$estimate[2]),color=\"red\") +\n  # stat_function(fun = dlnorm, args = list(meanlog = fit$estimate[1], sdlog = fit$estimate[2]),color=\"red\")+\n  scale_y_continuous(labels = scales::percent)+\n  geom_vline(xintercept = median_age,color=\"red\",linetype=2)+\n  labs(x=\"Age\",y=\"Percent of trees by age at death\")\n\n\n\n\n\n\n\nPopulation over time\n\n\nShow code\ntree_dat %>%\n  group_by(year) %>%\n  summarise(trees=n_distinct(tree)) %>%\n  ggplot()+\n  geom_line(aes(x=year,y=trees))+\n  geom_hline(yintercept = 0,color=NA)+\n  theme_minimal()+\n  scale_x_continuous(labels = scales::comma)+\n  labs(y=\"Colorful Bubbles\",x=\"Year\")\n\n\n\n\n\n\n\nCommon Colors\n\n\nShow code\ntree_dat %>% \n  ungroup() %>% \n  mutate(primary_color=case_when(\n    green>blue&green>red~\"Green\",\n    blue>=green&blue>red~\"Blue\",\n    red>=green&red>=blue~\"Red\"\n  )) %>% \n  ggplot()+\n  geom_bar(aes(x=year,fill=primary_color),width = 1,position = \"fill\")+\n  scale_fill_manual(values = c(\"blue\",\"green3\",\"red\"))+\n  scale_x_continuous(labels = scales::comma)+\n  scale_y_continuous(labels = scales::percent)+\n  theme_minimal()+\n  labs(x=\"Year\",y=\"Percent of Trees\",fill=\"Predominant Color\")+\n  theme(legend.position = 'bottom')\n\n\n\n\n\n\n\nColors over time\n\n\nShow code\ncommon_color<-tree_dat %>% \n  group_by(year) %>% \n  summarise(\n    n=n(),\n    colors=n_distinct(color),\n    red=mean(red),\n    blue=mean(blue),\n    green=mean(green)\n    ) %>% \n  arrange(-year)\ncommon_color$color<-rgb(common_color$red,common_color$green,common_color$blue)\n\ncommon_color %>% \n  ggplot()+\n  geom_col(aes(x=year,y=colors/n*100,fill=color),width=1)+\n  guides(fill='none')+\n  scale_fill_manual(values = unique(common_color$color))+\n  scale_x_continuous(labels = scales::comma)+\n  theme_minimal()+\n  labs(x=\"Year\",y=\"Unique colors per 100 trees\")\n\n\n\n\n\nShow code\ncommon_color %>% \n  pivot_longer(red:green) %>% \n  ggplot()+\n  geom_line(aes(x=year,y=value,color=stringr::str_to_title(name)))+\n  scale_color_manual(values = c(\"blue\",\"green3\",\"red\"))+\n  labs(x=\"Year\",y=\"Average Saturation of Color\",color=\"Color\")+\n  scale_y_continuous(labels = scales::percent)+\n  scale_x_continuous(labels = scales::comma)+\n  theme_minimal()+\n  theme(\n    legend.position = \"bottom\"\n  )\n\n\n\n\n\n\n\nCommon Locations\n\n\nShow code\ntree_dat %>% \n  ggplot()+\n  geom_bin2d(aes(x=x,y=y))+\n  scale_fill_viridis_c(labels=scales::comma)+\n  theme_void()+\n  theme(legend.position = 'bottom')+\n  coord_fixed()+\n  labs(fill=\"Count of Colorful Bubbles\")"
  },
  {
    "objectID": "colorcir_analysis.html#survival-analysis",
    "href": "colorcir_analysis.html#survival-analysis",
    "title": "Analysis of Colorful Bubbles",
    "section": "Survival Analysis",
    "text": "Survival Analysis\n\n\nShow code\nlibrary(survival)\nlibrary(survminer)\n\nmax_age_color<-max_age %>% \n  group_by(tree) %>% \n  filter(age==max(age)) %>% \n  ungroup() %>% \n  mutate(primary_color=case_when(\n    green>blue&green>red~\"Green\",\n    blue>=green&blue>red~\"Blue\",\n    red>=green&red>=blue~\"Red\"\n  ))\n\nkm=survfit(Surv(max_age_color$age,rep(1,nrow(max_age_color)))~max_age_color$primary_color)\n\nggsurvplot(fit=km, data=max_age_color,palette=c(\"blue\",\"green3\",\"red\"),\n           legend = \"bottom\", \n           legend.title = \"Predominant Color\",\n           legend.labs = c(\"Blue\", \"Green\",\"Red\"),\nrisk.table = F,conf.int=F) +\n    labs(\n        title=\"Survival Curve for Colorful Bubbles\",\n        x=\"Years\"\n    ) \n\n\n\n\n\nShow code\nsurvdiff(Surv(max_age_color$age,rep(1,nrow(max_age_color)))~max_age_color$primary_color)\n\n\nCall:\nsurvdiff(formula = Surv(max_age_color$age, rep(1, nrow(max_age_color))) ~ \n    max_age_color$primary_color)\n\n                                      N Observed Expected (O-E)^2/E (O-E)^2/V\nmax_age_color$primary_color=Blue   2541     2541     2516  0.245837  0.322247\nmax_age_color$primary_color=Green 19941    19941    19939  0.000159  0.000935\nmax_age_color$primary_color=Red    2443     2443     2470  0.287575  0.376283\n\n Chisq= 0.6  on 2 degrees of freedom, p= 0.7"
  },
  {
    "objectID": "page1.html",
    "href": "page1.html",
    "title": "Swifts",
    "section": "",
    "text": "If you haven’t seen it before, I highly recommend viewing the annual migration of Vaux’s swifts at Chapman Elementary in northwest Portland. On evenings in the fall, up to 10,000 swifts roost in the chimney of the school. Their movements, when assembled, are very similar to that of starling groupings in Europe. According to research from Princeton University, these formations are based on each individual bird trying to track the location of only seven other birds.\nEver since seeing the swifts the first time, I thought it would be fun to simulate the behavior of these birds. This interactive graphic is an animation that gives an overhead view of a simulation of 50 randomly placed birds. Each bird is trying to move to the midpoint of its seven nearest neighbors. Each frame of the simulation represents one ‘moment’ in which each bird attempts to re-calibrate its position. Animation is the perfect way to visually the behavior of these simulated birds as it allows the viewer to see the clustering and movements of the birds in general over time.\n\n\nShow code\nbirds_plot<-ggplot(all_birds2 %>% arrange(iteration) %>% filter(bird>0))+\n  # geom_point(aes(x=x,y=y,color=factor(bird),group=factor(bird),alpha=iteration))+\n  geom_spoke(aes(x=x,y=y,color=(bird),group=factor(bird),angle=a2),radius=1,arrow=arrow(type = \"closed\",length = unit(3/range,\"inches\")))+\n  guides(color='none')+\n  scale_color_viridis_b()+\n  coord_equal()+\n  transition_states(iteration)+\n  ease_aes(\"linear\")+\n  theme_void()+\n  # shadow_wake(wake_length = 1)+\n  theme(axis.ticks = element_blank(),\n        axis.title = element_blank(),\n        axis.text = element_blank())+\n  ggtitle(\"Moment {closest_state}\")\n\nanimate(birds_plot,nframes = iterations*2,duration = iterations/10,end_pause = 10,renderer = gifski_renderer())  \n\n\n\n\n\nAlternatively, we can focus on the journey of one individual – the bird that starts farthest to the right.\n\n\n\n\n\nHere is the journey of all swifts at once."
  }
]