---
title: "Colorful Bubbles"
author: "Hans Lehndorff"
---

```{r setup, include=FALSE}
library(tidyverse)
library(ggplot2)
library(gganimate)
library(ggforce)
library(useful)

load("data/arbor_color.rdata")

```

# Parameters

This is a random simulation of colorful bubbles. Each frame represents a "year" and the simulation last `r scales::comma(years)` years.

## Growth

Each bubble grows by 1 unit each year and increase by 1 in terms of "age" . At initialization each bubble have ages/sizes between 1 and 5.

## Death

However there is a chance that each bubble will "pop". The odds that a bubble pops is equivalent to age in age + lifespan. In this simulation the lifespan is `r lifespan` years. That is, at an age of `r lifespan` the colorful bubbles have a 50% of popping. Bubbles of age 1 will not pop.

## Color

At initialization, each colorful bubble is assigned a random color from the RGB colorspace. These colors scale between 0 and 1 in terms of red, green and blue.

## Replication

In this simulation there is a `r scales::percent(cross_prob)` chance in each year that a colorful bubble and it nearest neighbor will produce a baby bubble. The baby bubble will:

-   have a size of 1

-   have an age of 1

-   the average position of the parents plus some error

### Offspring color

Baby bubbles will have the average color (in terms of RGB) of the two parent bubbles. However, there is a chance, that this color will change. Specifically, for each color (R, G, and B) there is a chance equivalent to the strength of each color that that color will become up to 20% stronger, while the other colors will become 20% weaker. That is, strong greens are likely to become stronger green (and less red, and less blue).

# Result

![Colorful bubbles animation](data/colorful_bubbles.gif){fig-align="center"}

```{r animation}
 
# tree_plot<-ggplot(tree_dat)+
  # geom_bubble(aes(x0=x,y0=y,r=t,fill=factor(tree)),alpha=1)+
  # scale_fill_manual(values = tree_dat$color)+
  # coord_fixed(xlim = x_range,ylim = y_range)+
  # guides(fill='none')+
  # theme_void()+
  # transition_states(year)+
  # ease_aes("linear")

# animate(tree_plot,nframes = years*2,duration = years/10,end_pause = 10,renderer = gifski_renderer())  

```
